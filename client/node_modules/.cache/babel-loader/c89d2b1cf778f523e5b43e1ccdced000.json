{"ast":null,"code":"var _jsxFileName = \"/Users/vinaynaidu/Desktop/devconnector/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from '../layout/Spinner';\nimport { getProfileById } from '../actions/profile';\n\nconst Profile = ({\n  getProfileById,\n  match,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 44\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }, \" Back to profiles\")));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/vinaynaidu/Desktop/devconnector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","getProfileById","Profile","match","profile","loading","auth","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,cAAT,QAA+B,oBAA/B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAED,EAAAA,cAAF;AAAkBE,EAAAA,KAAlB;AAAyBC,EAAAA,OAAO,EAAC;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAjC;AAAqDC,EAAAA;AAArD,CAAD,KAAgE;AAC5ET,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,cAAc,CAACE,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAd;AACH,GAFQ,EAEN,CAACP,cAAD,CAFM,CAAT;AAIA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,gBAA2C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACpC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADoC,CADhD,CADJ;AAOH,CAZD;;AAcAH,OAAO,CAACO,SAAR,GAAoB;AAChBR,EAAAA,cAAc,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADf;AAEhBP,EAAAA,OAAO,EAAEN,SAAS,CAACc,MAAV,CAAiBD,UAFV;AAGhBL,EAAAA,IAAI,EAAER,SAAS,CAACc,MAAV,CAAiBD;AAHP,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,OAAO,EAAEU,KAAK,CAACV,OADe;AAE9BE,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AAFkB,CAAL,CAA7B;;AAKA,eAAeN,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,OAA7C,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from '../layout/Spinner';\nimport { getProfileById } from '../actions/profile'\n \nconst Profile = ({ getProfileById, match, profile:{profile, loading}, auth}) => {\n    useEffect(() => {\n        getProfileById(match.params.id)\n    }, [getProfileById]);\n\n    return (\n        <Fragment>\n            {profile === null || loading ? <Spinner/> : <Fragment>\n                    <Link to='/profiles' className='btn btn-light'> Back to profiles</Link>\n                </Fragment>}\n        </Fragment>\n    )\n}\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile)\n"]},"metadata":{},"sourceType":"module"}