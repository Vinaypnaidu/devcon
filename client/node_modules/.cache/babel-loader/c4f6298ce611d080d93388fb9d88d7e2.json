{"ast":null,"code":"var _jsxFileName = \"/Users/vinaynaidu/Desktop/devconnector/client/src/components/dashboard/Dashboard.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []); //empty brackets to make sure that the function runs only once\n\n  return loading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 42\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 55\n    }\n  }, \" test \");\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/vinaynaidu/Desktop/devconnector/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","profile","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAED,EAAAA,iBAAF;AAAqBE,EAAAA,IAArB;AAA2BC,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV;AAApC,CAAD,KAA8D;AAC5ER,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,EAFM,CAAT,CAD4E,CAGpE;;AACR,SAAOI,OAAO,IAAID,OAAO,KAAK,IAAvB,gBAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,gBAA2C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlD;AACH,CALD;;AAOAF,SAAS,CAACI,SAAV,GAAsB;AAClBL,EAAAA,iBAAiB,EAAEH,SAAS,CAACS,IAAV,CAAeC,UADhB;AAElBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBD,UAFL;AAGlBJ,EAAAA,OAAO,EAAEN,SAAS,CAACW,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BR,EAAAA,IAAI,EAAEQ,KAAK,CAACR,IADkB;AAE9BC,EAAAA,OAAO,EAAEO,KAAK,CAACP;AAFe,CAAL,CAA7B;;AAMA,eAAeL,OAAO,CAACW,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAAgDC,SAAhD,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile'\n\nconst Dashboard = ({ getCurrentProfile, auth, profile: {profile, loading} }) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, []); //empty brackets to make sure that the function runs only once\n    return loading && profile === null ? <Spinner/> : <Fragment> test </Fragment> ;\n};\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}