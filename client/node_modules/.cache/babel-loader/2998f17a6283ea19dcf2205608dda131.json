{"ast":null,"code":"var _jsxFileName = \"/Users/vinaynaidu/Desktop/devconnector/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getProfileById } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\n\nconst Profile = ({\n  getProfileById,\n  match,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 60\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, \" Back to profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 111\n    }\n  }, \"Edit Profile\")));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/vinaynaidu/Desktop/devconnector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","getProfileById","Spinner","Profile","match","profile","loading","auth","params","id","isAuthenticated","user","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEF,EAAAA,cAAF;AAAkBG,EAAAA,KAAlB;AAAyBC,EAAAA,OAAO,EAAC;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAjC;AAAqDC,EAAAA;AAArD,CAAD,KAAgE;AAC5EV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,cAAc,CAACG,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAd;AACH,GAFQ,EAEN,CAACR,cAAD,CAFM,CAAT;AAIA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBAA+B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,gBAA8C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACvC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADuC,EAEtCC,IAAI,CAACG,eAAL,IAAwBH,IAAI,CAACD,OAAL,KAAiB,KAAzC,IAAkDC,IAAI,CAACI,IAAL,CAAUC,GAAV,KAAkBP,OAAO,CAACM,IAAR,CAAaC,GAAjF,iBAAyF,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFnD,CADnD,CADJ;AAQH,CAbD;;AAeAT,OAAO,CAACU,SAAR,GAAoB;AAChBZ,EAAAA,cAAc,EAAEH,SAAS,CAACgB,IAAV,CAAeC,UADf;AAEhBV,EAAAA,OAAO,EAAEP,SAAS,CAACkB,MAAV,CAAiBD,UAFV;AAGhBR,EAAAA,IAAI,EAAET,SAAS,CAACkB,MAAV,CAAiBD;AAHP,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,OAAO,EAAEa,KAAK,CAACb,OADe;AAE9BE,EAAAA,IAAI,EAAEW,KAAK,CAACX;AAFkB,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,OAA7C,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getProfileById } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\n\nconst Profile = ({ getProfileById, match, profile:{profile, loading}, auth}) => {\n    useEffect(() => {\n        getProfileById(match.params.id)\n    }, [getProfileById]);\n\n    return (\n        <Fragment>\n            {profile === null || loading ? (<Spinner />) : <Fragment>\n                    <Link to='/profiles' className='btn btn-light'> Back to profiles</Link>\n                    {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (<Link to='/edit-profile' className='btn btn-dark'>Edit Profile</Link>)}\n                </Fragment>}\n        </Fragment>\n    )\n}\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile)\n"]},"metadata":{},"sourceType":"module"}